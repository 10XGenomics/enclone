name: Build enclone mac 

on:
  #push:
    #tags:
    #- 'auto_*'
  push:
    branches:
      - meryl/github-actions-1
jobs:
  build:
    # Job name is Greeting
    name: build-job-macos
    # This job runs on Linux
    runs-on: macos-latest
    steps:
      - name: Install Rust
        run: |
          case $(rustc --version) in
            "rustc 1.40.0"*) ;;
            *) rustup default 1.40.0 ;;
          esac
          rustc --version
          rustfmt --version 
      - name: Clone git repository
      # This step uses GitHub's hello-world-javascript-action: https://github.com/actions/checkout
        uses: actions/checkout@master
      - name: Check Rust formatting
        run: cargo fmt -- --check
      - name: build-enclone
        run: cargo build --release && export PATH=target/release:$PATH
      - name: unit tests
        run: cargo test --release --bin traceback1
      - name: make binary
        run: |
          tag_num=$(git ls-remote --refs --sort=-v:refname  https://github.com/10XDev/enclone | head -n 1 | cut -d $'\t' -f 2 | cut -d "/" -f 3)
          cp target/release/enclone enclone-macos-${tag_num}
          chmod 755 enclone-macos-${tag_num}
          echo "GET latest release"
          curl --request GET \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --url https://api.github.com/repos/${{ github.repository }}/releases/tags/${tag_num} > tagged_release_response.json
          cat tagged_release_response.json
          upload_url_key=$(grep "upload_url" tagged_release_response.json | sed 's/,*$//g')
          upload_url=$(echo ${upload_url_key/\"upload_url\": /} | tr -d '"')
          new_asset_url=${upload_url/\{?name,label\}/?name=enclone-macos-${tag_num}}
          echo "POST binary to latest release"
          curl --request POST \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'Content-Type: application/octet-stream' \
          --data-binary @enclone-macos-${tag_num} \
          --url $new_asset_url
