on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Build and Upload Release 

env:
  CARGO_INCREMENTAL: 0

jobs:

  windows:
    runs-on: windows-latest-10.15
    steps:
      - name: Checkout git repository
        uses: actions/checkout@master
      - name: Make release build
        run: |
          cargo build --release
          target/release/enclone --help | grep -q enclone
          mkdir artifacts
          cp -a target/release/enclone artifacts/enclone-windows
      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: enclone
          path: artifacts

  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repository
        uses: actions/checkout@master
      - name: Login to GitHub Package Registry
        run: docker login ghcr.io -u 10xbuild -p ${{secrets.GH_PAT}}
      - name: Make release build
        run: >
          docker run -v ${{github.workspace}}:/root
          -e GITHUB_SHA -e GITHUB_REF -e DEBIAN_FRONTEND=noninteractive
          ghcr.io/10xdev/toolchain:latest
          /bin/bash -leuxc '
          apt-get update
          && apt-get install -y libfreetype6-dev pkg-config
          && ln -s /usr/lib/x86_64-linux-gnu/libfreetype.a /usr/lib/x86_64-linux-gnu/libfreetype.so /mnt/build/toolchains/versions/latest/lib/
          && env -u PKG_CONFIG_LIBDIR cargo check --release
          && rm -f /mnt/build/toolchains/versions/latest/lib/libfreetype.so
          && cargo build --release
          && target/release/enclone --help | grep -q enclone
          && readelf -V target/release/enclone
          && ldd target/release/enclone
          ';
          mkdir artifacts;
          cp -a target/release/enclone artifacts/enclone-linux
      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: enclone
          path: artifacts

  setup-release:
    needs: [linux, macos, windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: enclone
          path: artifacts

      - run: ls artifacts
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{github.ref}}
          release_name: beta release ${{github.ref}}
          draft: false
          prerelease: false
          body: |
            SHA-256 checksums:
            - ${{hashFiles('artifacts/enclone-linux')}} `enclone_linux`
            - ${{hashFiles('artifacts/enclone-macos')}} `enclone_macos`
            - ${{hashFiles('artifacts/enclone-windows')}} `enclone_windows`
      - name: Upload Linux
        id: upload-linux-release 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: artifacts/enclone-linux
          asset_name: enclone_linux
          asset_content_type: application/octet-stream

      - name: Upload Mac
        id: upload-mac-release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: artifacts/enclone-macos
          asset_name: enclone_macos
          asset_content_type: application/octet-stream

      - name: Upload Windows
        id: upload-windows-release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: artifacts/enclone-windows
          asset_name: enclone_windows
          asset_content_type: application/octet-stream
