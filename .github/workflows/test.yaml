name: Test enclone

on:
  pull_request:
  push:
    branches:
      - master

env:
  CARGO_INCREMENTAL: 0

jobs:
  test-mac:
    # This job runs on MacOS Catalina
    runs-on: macos-latest
    steps:

      # get prerequisite code in place (duplicated verbatim below)

      - name: rust version
        run: rustup default 1.43.0
      - name: add rustfmt
        run: rustup component add rustfmt
      - name: install cargo-license
        run: cargo install cargo-license

      # check out master

      - name: Checkout enclone master
        uses: actions/checkout@master

      # set up caching (duplicated verbatim below)

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{runner.os}}-cargo-registry-${{hashFiles('Cargo.lock')}}
          restore-keys: ${{runner.os}}-cargo-registry-
      - name: Cache cargo git index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{runner.os}}-cargo-git-${{hashFiles('Cargo.lock')}}
          restore-keys: ${{runner.os}}-cargo-git-
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{runner.os}}-cargo-target-${{hashFiles('Cargo.lock')}}-${{hashFiles('**/Cargo.toml')}}-${{hashFiles('**/*.rs')}}
          restore-keys: |
            ${{runner.os}}-cargo-target-${{hashFiles('Cargo.lock')}}-
            ${{runner.os}}-cargo-target-

      # start the real work

      - name: Check Rust formatting
        run: cargo fmt -- --check
      - name: Remove the Cargo target directory
        if: github.ref == 'refs/heads/master'
        run: cargo clean
      - name: build-enclone
        run: cargo build --release
      - name: download test data
        run: git clone --depth=1 https://github.com/10XGenomics/enclone-data.git
      - name: unit tests
        run: cd enclone_main; cargo test --release --features basic -- --nocapture

  test-linux:
    # This job runs on Linux
    runs-on: ubuntu-latest
    steps:

      # get prerequisite code in place (duplicated verbatim above)

      - name: rust version
        run: rustup default 1.43.0
      - name: add rustfmt
        run: rustup component add rustfmt
      - name: install cargo-license
        run: cargo install cargo-license

      # check out master

      - name: Checkout enclone master
        uses: actions/checkout@master
        with:
          fetch-depth: 100

      # set up caching (duplicated verbatim below)

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{runner.os}}-cargo-registry-${{hashFiles('Cargo.lock')}}
          restore-keys: ${{runner.os}}-cargo-registry-
      - name: Cache cargo git index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{runner.os}}-cargo-git-${{hashFiles('Cargo.lock')}}
          restore-keys: ${{runner.os}}-cargo-git-
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{runner.os}}-cargo-target-${{hashFiles('Cargo.lock')}}-${{hashFiles('**/Cargo.toml')}}-${{hashFiles('**/*.rs')}}
          restore-keys: |
            ${{runner.os}}-cargo-target-${{hashFiles('Cargo.lock')}}-
            ${{runner.os}}-cargo-target-

      # start the real work

      - name: Check for large files
        run: >
          git rev-list --objects ${{github.event.pull_request.base.sha}}..
          | git cat-file --batch-check='%(objectname) %(objecttype) %(objectsize) %(rest)'
          | awk '$2 == "blob" && $3 >= 1000000 { print substr($1, 1, 7), $3, $4; fail=1 } END { exit fail }'
      - name: Check Rust formatting
        run: cargo fmt -- --check
      - name: Remove the Cargo target directory
        if: github.ref == 'refs/heads/master'
        run: cargo clean
      - name: build-enclone
        run: cargo build --release
      - name: download test data
        run: git clone --depth=1 https://github.com/10XGenomics/enclone-data.git
      - name: unit tests
        run: cd enclone_main; cargo test --release --features basic -- --nocapture
